# Python program for implementation of Bubble Sort


def bubbleSort(arr):
	n = len(arr)

	# Traverse through all array elements
	for i in range(n):

		# Last i elements are already in place
		for j in range(0, n-i-1):

			# traverse the array from 0 to n-i-1
			# Swap if the element found is greater
			# than the next element
			if arr[j] > arr[j+1]:
				arr[j], arr[j+1] = arr[j+1], arr[j]


# Driver code to test above
if __name__ == "__main__":
arr = [5, 1, 4, 2, 8]

bubbleSort(arr)

print("Sorted array is:")
for i in range(len(arr)):
	print("%d" % arr[i], end=" ")




def optimized_bubble_sort(a):
  for i in range(0, len(a)):
    swapped = False
    for j in range(0, len(a)-i-1):
      if (a[j] > a[j+1]):
        a[j], a[j+1] = a[j+1], a[j]
        swapped = True

    if(not (swapped)):
      break

if __name__ == '__main__':
  a = [4, 8, 1, 3, 10, 9, 2, 11, 5, 6]
  optimized_bubble_sort(a)
  print(a)


###



update

###
